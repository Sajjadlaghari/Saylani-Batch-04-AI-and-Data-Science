2023-08-07 01:13:04,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 01:13:04,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 01:13:04,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 01:13:04,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 01:13:04,822:INFO:PyCaret ClassificationExperiment
2023-08-07 01:13:04,822:INFO:Logging name: clf-default-name
2023-08-07 01:13:04,822:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-07 01:13:04,822:INFO:version 3.0.4
2023-08-07 01:13:04,822:INFO:Initializing setup()
2023-08-07 01:13:04,822:INFO:self.USI: 8d9a
2023-08-07 01:13:04,822:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'logging_param', 'fold_shuffle_param', 'n_jobs_param', 'y', 'USI', 'X', 'memory', 'exp_id', 'fold_generator', 'html_param', 'is_multiclass', 'y_test', 'pipeline', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'log_plots_param', 'seed', '_available_plots', 'gpu_param', 'target_param', 'X_train', 'X_test', 'exp_name_log', 'data', 'fix_imbalance'}
2023-08-07 01:13:04,822:INFO:Checking environment
2023-08-07 01:13:04,823:INFO:python_version: 3.9.17
2023-08-07 01:13:04,823:INFO:python_build: ('main', 'Jul  5 2023 20:47:11')
2023-08-07 01:13:04,823:INFO:machine: AMD64
2023-08-07 01:13:04,823:INFO:platform: Windows-10-10.0.19045-SP0
2023-08-07 01:13:04,823:INFO:Memory: svmem(total=17031249920, available=6781722624, percent=60.2, used=10249527296, free=6781722624)
2023-08-07 01:13:04,823:INFO:Physical Core: 4
2023-08-07 01:13:04,823:INFO:Logical Core: 8
2023-08-07 01:13:04,823:INFO:Checking libraries
2023-08-07 01:13:04,823:INFO:System:
2023-08-07 01:13:04,823:INFO:    python: 3.9.17 (main, Jul  5 2023, 20:47:11) [MSC v.1916 64 bit (AMD64)]
2023-08-07 01:13:04,823:INFO:executable: C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\python.exe
2023-08-07 01:13:04,823:INFO:   machine: Windows-10-10.0.19045-SP0
2023-08-07 01:13:04,823:INFO:PyCaret required dependencies:
2023-08-07 01:13:04,842:INFO:                 pip: 23.2.1
2023-08-07 01:13:04,842:INFO:          setuptools: 68.0.0
2023-08-07 01:13:04,842:INFO:             pycaret: 3.0.4
2023-08-07 01:13:04,842:INFO:             IPython: 8.14.0
2023-08-07 01:13:04,842:INFO:          ipywidgets: 8.1.0
2023-08-07 01:13:04,843:INFO:                tqdm: 4.65.0
2023-08-07 01:13:04,843:INFO:               numpy: 1.23.5
2023-08-07 01:13:04,843:INFO:              pandas: 1.5.3
2023-08-07 01:13:04,843:INFO:              jinja2: 3.1.2
2023-08-07 01:13:04,843:INFO:               scipy: 1.11.1
2023-08-07 01:13:04,843:INFO:              joblib: 1.3.1
2023-08-07 01:13:04,843:INFO:             sklearn: 1.2.2
2023-08-07 01:13:04,843:INFO:                pyod: 1.1.0
2023-08-07 01:13:04,843:INFO:            imblearn: 0.11.0
2023-08-07 01:13:04,843:INFO:   category_encoders: 2.6.1
2023-08-07 01:13:04,843:INFO:            lightgbm: 4.0.0
2023-08-07 01:13:04,843:INFO:               numba: 0.57.1
2023-08-07 01:13:04,843:INFO:            requests: 2.31.0
2023-08-07 01:13:04,843:INFO:          matplotlib: 3.7.2
2023-08-07 01:13:04,843:INFO:          scikitplot: 0.3.7
2023-08-07 01:13:04,843:INFO:         yellowbrick: 1.5
2023-08-07 01:13:04,843:INFO:              plotly: 5.15.0
2023-08-07 01:13:04,844:INFO:    plotly-resampler: Not installed
2023-08-07 01:13:04,844:INFO:             kaleido: 0.2.1
2023-08-07 01:13:04,844:INFO:           schemdraw: 0.15
2023-08-07 01:13:04,844:INFO:         statsmodels: 0.14.0
2023-08-07 01:13:04,844:INFO:              sktime: 0.21.0
2023-08-07 01:13:04,844:INFO:               tbats: 1.1.3
2023-08-07 01:13:04,844:INFO:            pmdarima: 2.0.3
2023-08-07 01:13:04,844:INFO:              psutil: 5.9.5
2023-08-07 01:13:04,844:INFO:          markupsafe: 2.1.3
2023-08-07 01:13:04,844:INFO:             pickle5: Not installed
2023-08-07 01:13:04,844:INFO:         cloudpickle: 2.2.1
2023-08-07 01:13:04,844:INFO:         deprecation: 2.1.0
2023-08-07 01:13:04,844:INFO:              xxhash: 3.3.0
2023-08-07 01:13:04,844:INFO:           wurlitzer: Not installed
2023-08-07 01:13:04,844:INFO:PyCaret optional dependencies:
2023-08-07 01:13:04,860:INFO:                shap: Not installed
2023-08-07 01:13:04,860:INFO:           interpret: Not installed
2023-08-07 01:13:04,860:INFO:                umap: Not installed
2023-08-07 01:13:04,860:INFO:    pandas_profiling: Not installed
2023-08-07 01:13:04,860:INFO:  explainerdashboard: Not installed
2023-08-07 01:13:04,860:INFO:             autoviz: Not installed
2023-08-07 01:13:04,860:INFO:           fairlearn: Not installed
2023-08-07 01:13:04,860:INFO:          deepchecks: Not installed
2023-08-07 01:13:04,860:INFO:             xgboost: Not installed
2023-08-07 01:13:04,860:INFO:            catboost: Not installed
2023-08-07 01:13:04,860:INFO:              kmodes: Not installed
2023-08-07 01:13:04,860:INFO:             mlxtend: Not installed
2023-08-07 01:13:04,860:INFO:       statsforecast: Not installed
2023-08-07 01:13:04,861:INFO:        tune_sklearn: Not installed
2023-08-07 01:13:04,861:INFO:                 ray: Not installed
2023-08-07 01:13:04,861:INFO:            hyperopt: Not installed
2023-08-07 01:13:04,861:INFO:              optuna: Not installed
2023-08-07 01:13:04,861:INFO:               skopt: Not installed
2023-08-07 01:13:04,861:INFO:              mlflow: Not installed
2023-08-07 01:13:04,861:INFO:              gradio: Not installed
2023-08-07 01:13:04,861:INFO:             fastapi: Not installed
2023-08-07 01:13:04,861:INFO:             uvicorn: Not installed
2023-08-07 01:13:04,861:INFO:              m2cgen: Not installed
2023-08-07 01:13:04,861:INFO:           evidently: Not installed
2023-08-07 01:13:04,861:INFO:               fugue: Not installed
2023-08-07 01:13:04,861:INFO:           streamlit: Not installed
2023-08-07 01:13:04,861:INFO:             prophet: Not installed
2023-08-07 01:13:04,861:INFO:None
2023-08-07 01:13:04,861:INFO:Set up data.
2023-08-07 01:13:04,867:INFO:Set up train/test split.
2023-08-07 01:13:04,871:INFO:Set up index.
2023-08-07 01:13:04,871:INFO:Set up folding strategy.
2023-08-07 01:13:04,871:INFO:Assigning column types.
2023-08-07 01:13:04,874:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-07 01:13:04,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-07 01:13:04,914:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:04,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:04,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-07 01:13:05,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:05,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,065:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-07 01:13:05,103:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:05,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:05,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,190:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-08-07 01:13:05,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,319:INFO:Preparing preprocessing pipeline...
2023-08-07 01:13:05,320:INFO:Set up simple imputation.
2023-08-07 01:13:05,321:INFO:Set up column name cleaning.
2023-08-07 01:13:05,344:INFO:Finished creating preprocessing pipeline.
2023-08-07 01:13:05,349:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-08-07 01:13:05,349:INFO:Creating final display dataframe.
2023-08-07 01:13:05,410:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              8d9a
2023-08-07 01:13:05,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:05,547:INFO:setup() successfully completed in 0.73s...............
2023-08-07 01:13:33,220:INFO:PyCaret ClassificationExperiment
2023-08-07 01:13:33,220:INFO:Logging name: clf-default-name
2023-08-07 01:13:33,220:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-07 01:13:33,220:INFO:version 3.0.4
2023-08-07 01:13:33,220:INFO:Initializing setup()
2023-08-07 01:13:33,220:INFO:self.USI: 06d1
2023-08-07 01:13:33,220:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'logging_param', 'fold_shuffle_param', 'n_jobs_param', 'y', 'USI', 'X', 'memory', 'exp_id', 'fold_generator', 'html_param', 'is_multiclass', 'y_test', 'pipeline', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'log_plots_param', 'seed', '_available_plots', 'gpu_param', 'target_param', 'X_train', 'X_test', 'exp_name_log', 'data', 'fix_imbalance'}
2023-08-07 01:13:33,220:INFO:Checking environment
2023-08-07 01:13:33,220:INFO:python_version: 3.9.17
2023-08-07 01:13:33,220:INFO:python_build: ('main', 'Jul  5 2023 20:47:11')
2023-08-07 01:13:33,221:INFO:machine: AMD64
2023-08-07 01:13:33,221:INFO:platform: Windows-10-10.0.19045-SP0
2023-08-07 01:13:33,221:INFO:Memory: svmem(total=17031249920, available=6876844032, percent=59.6, used=10154405888, free=6876844032)
2023-08-07 01:13:33,221:INFO:Physical Core: 4
2023-08-07 01:13:33,221:INFO:Logical Core: 8
2023-08-07 01:13:33,221:INFO:Checking libraries
2023-08-07 01:13:33,221:INFO:System:
2023-08-07 01:13:33,221:INFO:    python: 3.9.17 (main, Jul  5 2023, 20:47:11) [MSC v.1916 64 bit (AMD64)]
2023-08-07 01:13:33,221:INFO:executable: C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\python.exe
2023-08-07 01:13:33,221:INFO:   machine: Windows-10-10.0.19045-SP0
2023-08-07 01:13:33,221:INFO:PyCaret required dependencies:
2023-08-07 01:13:33,222:INFO:                 pip: 23.2.1
2023-08-07 01:13:33,222:INFO:          setuptools: 68.0.0
2023-08-07 01:13:33,222:INFO:             pycaret: 3.0.4
2023-08-07 01:13:33,222:INFO:             IPython: 8.14.0
2023-08-07 01:13:33,222:INFO:          ipywidgets: 8.1.0
2023-08-07 01:13:33,222:INFO:                tqdm: 4.65.0
2023-08-07 01:13:33,222:INFO:               numpy: 1.23.5
2023-08-07 01:13:33,222:INFO:              pandas: 1.5.3
2023-08-07 01:13:33,222:INFO:              jinja2: 3.1.2
2023-08-07 01:13:33,222:INFO:               scipy: 1.11.1
2023-08-07 01:13:33,222:INFO:              joblib: 1.3.1
2023-08-07 01:13:33,223:INFO:             sklearn: 1.2.2
2023-08-07 01:13:33,223:INFO:                pyod: 1.1.0
2023-08-07 01:13:33,223:INFO:            imblearn: 0.11.0
2023-08-07 01:13:33,223:INFO:   category_encoders: 2.6.1
2023-08-07 01:13:33,223:INFO:            lightgbm: 4.0.0
2023-08-07 01:13:33,223:INFO:               numba: 0.57.1
2023-08-07 01:13:33,223:INFO:            requests: 2.31.0
2023-08-07 01:13:33,223:INFO:          matplotlib: 3.7.2
2023-08-07 01:13:33,223:INFO:          scikitplot: 0.3.7
2023-08-07 01:13:33,223:INFO:         yellowbrick: 1.5
2023-08-07 01:13:33,223:INFO:              plotly: 5.15.0
2023-08-07 01:13:33,223:INFO:    plotly-resampler: Not installed
2023-08-07 01:13:33,224:INFO:             kaleido: 0.2.1
2023-08-07 01:13:33,224:INFO:           schemdraw: 0.15
2023-08-07 01:13:33,224:INFO:         statsmodels: 0.14.0
2023-08-07 01:13:33,224:INFO:              sktime: 0.21.0
2023-08-07 01:13:33,224:INFO:               tbats: 1.1.3
2023-08-07 01:13:33,224:INFO:            pmdarima: 2.0.3
2023-08-07 01:13:33,224:INFO:              psutil: 5.9.5
2023-08-07 01:13:33,224:INFO:          markupsafe: 2.1.3
2023-08-07 01:13:33,224:INFO:             pickle5: Not installed
2023-08-07 01:13:33,224:INFO:         cloudpickle: 2.2.1
2023-08-07 01:13:33,224:INFO:         deprecation: 2.1.0
2023-08-07 01:13:33,224:INFO:              xxhash: 3.3.0
2023-08-07 01:13:33,224:INFO:           wurlitzer: Not installed
2023-08-07 01:13:33,224:INFO:PyCaret optional dependencies:
2023-08-07 01:13:33,224:INFO:                shap: Not installed
2023-08-07 01:13:33,224:INFO:           interpret: Not installed
2023-08-07 01:13:33,225:INFO:                umap: Not installed
2023-08-07 01:13:33,225:INFO:    pandas_profiling: Not installed
2023-08-07 01:13:33,225:INFO:  explainerdashboard: Not installed
2023-08-07 01:13:33,225:INFO:             autoviz: Not installed
2023-08-07 01:13:33,225:INFO:           fairlearn: Not installed
2023-08-07 01:13:33,225:INFO:          deepchecks: Not installed
2023-08-07 01:13:33,225:INFO:             xgboost: Not installed
2023-08-07 01:13:33,225:INFO:            catboost: Not installed
2023-08-07 01:13:33,225:INFO:              kmodes: Not installed
2023-08-07 01:13:33,225:INFO:             mlxtend: Not installed
2023-08-07 01:13:33,225:INFO:       statsforecast: Not installed
2023-08-07 01:13:33,225:INFO:        tune_sklearn: Not installed
2023-08-07 01:13:33,225:INFO:                 ray: Not installed
2023-08-07 01:13:33,225:INFO:            hyperopt: Not installed
2023-08-07 01:13:33,226:INFO:              optuna: Not installed
2023-08-07 01:13:33,226:INFO:               skopt: Not installed
2023-08-07 01:13:33,226:INFO:              mlflow: Not installed
2023-08-07 01:13:33,226:INFO:              gradio: Not installed
2023-08-07 01:13:33,226:INFO:             fastapi: Not installed
2023-08-07 01:13:33,226:INFO:             uvicorn: Not installed
2023-08-07 01:13:33,226:INFO:              m2cgen: Not installed
2023-08-07 01:13:33,226:INFO:           evidently: Not installed
2023-08-07 01:13:33,226:INFO:               fugue: Not installed
2023-08-07 01:13:33,226:INFO:           streamlit: Not installed
2023-08-07 01:13:33,226:INFO:             prophet: Not installed
2023-08-07 01:13:33,226:INFO:None
2023-08-07 01:13:33,226:INFO:Set up data.
2023-08-07 01:13:33,234:INFO:Set up train/test split.
2023-08-07 01:13:33,239:INFO:Set up index.
2023-08-07 01:13:33,239:INFO:Set up folding strategy.
2023-08-07 01:13:33,240:INFO:Assigning column types.
2023-08-07 01:13:33,242:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-07 01:13:33,285:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,286:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,378:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-07 01:13:33,417:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-07 01:13:33,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,509:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-08-07 01:13:33,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,644:INFO:Preparing preprocessing pipeline...
2023-08-07 01:13:33,645:INFO:Set up simple imputation.
2023-08-07 01:13:33,645:INFO:Set up column name cleaning.
2023-08-07 01:13:33,662:INFO:Finished creating preprocessing pipeline.
2023-08-07 01:13:33,666:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-08-07 01:13:33,666:INFO:Creating final display dataframe.
2023-08-07 01:13:33,726:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    Class variable
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              06d1
2023-08-07 01:13:33,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-07 01:13:33,870:INFO:setup() successfully completed in 0.66s...............
2023-08-07 01:14:16,649:INFO:Initializing compare_models()
2023-08-07 01:14:16,649:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-08-07 01:14:16,649:INFO:Checking exceptions
2023-08-07 01:14:16,653:INFO:Preparing display monitor
2023-08-07 01:14:16,690:INFO:Initializing Logistic Regression
2023-08-07 01:14:16,691:INFO:Total runtime is 1.6570091247558594e-05 minutes
2023-08-07 01:14:16,695:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:16,695:INFO:Initializing create_model()
2023-08-07 01:14:16,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:16,696:INFO:Checking exceptions
2023-08-07 01:14:16,696:INFO:Importing libraries
2023-08-07 01:14:16,696:INFO:Copying training dataset
2023-08-07 01:14:16,704:INFO:Defining folds
2023-08-07 01:14:16,704:INFO:Declaring metric variables
2023-08-07 01:14:16,709:INFO:Importing untrained model
2023-08-07 01:14:16,715:INFO:Logistic Regression Imported successfully
2023-08-07 01:14:16,726:INFO:Starting cross validation
2023-08-07 01:14:16,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:22,006:INFO:Calculating mean and std
2023-08-07 01:14:22,008:INFO:Creating metrics dataframe
2023-08-07 01:14:22,019:INFO:Uploading results into container
2023-08-07 01:14:22,020:INFO:Uploading model into container now
2023-08-07 01:14:22,020:INFO:_master_model_container: 1
2023-08-07 01:14:22,020:INFO:_display_container: 2
2023-08-07 01:14:22,025:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:22,029:INFO:create_model() successfully completed......................................
2023-08-07 01:14:22,099:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:22,099:INFO:Creating metrics dataframe
2023-08-07 01:14:22,110:INFO:Initializing K Neighbors Classifier
2023-08-07 01:14:22,110:INFO:Total runtime is 0.09033374786376953 minutes
2023-08-07 01:14:22,115:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:22,115:INFO:Initializing create_model()
2023-08-07 01:14:22,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:22,115:INFO:Checking exceptions
2023-08-07 01:14:22,115:INFO:Importing libraries
2023-08-07 01:14:22,116:INFO:Copying training dataset
2023-08-07 01:14:22,120:INFO:Defining folds
2023-08-07 01:14:22,121:INFO:Declaring metric variables
2023-08-07 01:14:22,125:INFO:Importing untrained model
2023-08-07 01:14:22,130:INFO:K Neighbors Classifier Imported successfully
2023-08-07 01:14:22,136:INFO:Starting cross validation
2023-08-07 01:14:22,138:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:22,634:INFO:Calculating mean and std
2023-08-07 01:14:22,635:INFO:Creating metrics dataframe
2023-08-07 01:14:22,642:INFO:Uploading results into container
2023-08-07 01:14:22,643:INFO:Uploading model into container now
2023-08-07 01:14:22,644:INFO:_master_model_container: 2
2023-08-07 01:14:22,644:INFO:_display_container: 2
2023-08-07 01:14:22,644:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-08-07 01:14:22,644:INFO:create_model() successfully completed......................................
2023-08-07 01:14:22,703:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:22,703:INFO:Creating metrics dataframe
2023-08-07 01:14:22,714:INFO:Initializing Naive Bayes
2023-08-07 01:14:22,714:INFO:Total runtime is 0.10040043592453003 minutes
2023-08-07 01:14:22,717:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:22,717:INFO:Initializing create_model()
2023-08-07 01:14:22,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:22,718:INFO:Checking exceptions
2023-08-07 01:14:22,718:INFO:Importing libraries
2023-08-07 01:14:22,718:INFO:Copying training dataset
2023-08-07 01:14:22,722:INFO:Defining folds
2023-08-07 01:14:22,723:INFO:Declaring metric variables
2023-08-07 01:14:22,727:INFO:Importing untrained model
2023-08-07 01:14:22,730:INFO:Naive Bayes Imported successfully
2023-08-07 01:14:22,737:INFO:Starting cross validation
2023-08-07 01:14:22,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:23,026:INFO:Calculating mean and std
2023-08-07 01:14:23,027:INFO:Creating metrics dataframe
2023-08-07 01:14:23,032:INFO:Uploading results into container
2023-08-07 01:14:23,033:INFO:Uploading model into container now
2023-08-07 01:14:23,033:INFO:_master_model_container: 3
2023-08-07 01:14:23,033:INFO:_display_container: 2
2023-08-07 01:14:23,033:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-08-07 01:14:23,033:INFO:create_model() successfully completed......................................
2023-08-07 01:14:23,094:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:23,094:INFO:Creating metrics dataframe
2023-08-07 01:14:23,108:INFO:Initializing Decision Tree Classifier
2023-08-07 01:14:23,108:INFO:Total runtime is 0.10696658690770468 minutes
2023-08-07 01:14:23,113:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:23,113:INFO:Initializing create_model()
2023-08-07 01:14:23,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:23,114:INFO:Checking exceptions
2023-08-07 01:14:23,114:INFO:Importing libraries
2023-08-07 01:14:23,114:INFO:Copying training dataset
2023-08-07 01:14:23,120:INFO:Defining folds
2023-08-07 01:14:23,120:INFO:Declaring metric variables
2023-08-07 01:14:23,126:INFO:Importing untrained model
2023-08-07 01:14:23,131:INFO:Decision Tree Classifier Imported successfully
2023-08-07 01:14:23,143:INFO:Starting cross validation
2023-08-07 01:14:23,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:23,405:INFO:Calculating mean and std
2023-08-07 01:14:23,406:INFO:Creating metrics dataframe
2023-08-07 01:14:23,412:INFO:Uploading results into container
2023-08-07 01:14:23,413:INFO:Uploading model into container now
2023-08-07 01:14:23,413:INFO:_master_model_container: 4
2023-08-07 01:14:23,413:INFO:_display_container: 2
2023-08-07 01:14:23,414:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-08-07 01:14:23,414:INFO:create_model() successfully completed......................................
2023-08-07 01:14:23,473:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:23,474:INFO:Creating metrics dataframe
2023-08-07 01:14:23,489:INFO:Initializing SVM - Linear Kernel
2023-08-07 01:14:23,490:INFO:Total runtime is 0.11332815090815226 minutes
2023-08-07 01:14:23,497:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:23,498:INFO:Initializing create_model()
2023-08-07 01:14:23,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:23,498:INFO:Checking exceptions
2023-08-07 01:14:23,499:INFO:Importing libraries
2023-08-07 01:14:23,499:INFO:Copying training dataset
2023-08-07 01:14:23,507:INFO:Defining folds
2023-08-07 01:14:23,507:INFO:Declaring metric variables
2023-08-07 01:14:23,511:INFO:Importing untrained model
2023-08-07 01:14:23,515:INFO:SVM - Linear Kernel Imported successfully
2023-08-07 01:14:23,528:INFO:Starting cross validation
2023-08-07 01:14:23,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:23,630:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,646:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,651:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,655:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,660:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,664:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:23,678:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,680:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,685:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,695:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:23,720:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,730:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:23,737:INFO:Calculating mean and std
2023-08-07 01:14:23,737:INFO:Creating metrics dataframe
2023-08-07 01:14:23,745:INFO:Uploading results into container
2023-08-07 01:14:23,745:INFO:Uploading model into container now
2023-08-07 01:14:23,746:INFO:_master_model_container: 5
2023-08-07 01:14:23,746:INFO:_display_container: 2
2023-08-07 01:14:23,746:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-07 01:14:23,746:INFO:create_model() successfully completed......................................
2023-08-07 01:14:23,808:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:23,808:INFO:Creating metrics dataframe
2023-08-07 01:14:23,822:INFO:Initializing Ridge Classifier
2023-08-07 01:14:23,822:INFO:Total runtime is 0.11886131366093954 minutes
2023-08-07 01:14:23,827:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:23,828:INFO:Initializing create_model()
2023-08-07 01:14:23,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:23,828:INFO:Checking exceptions
2023-08-07 01:14:23,828:INFO:Importing libraries
2023-08-07 01:14:23,828:INFO:Copying training dataset
2023-08-07 01:14:23,833:INFO:Defining folds
2023-08-07 01:14:23,833:INFO:Declaring metric variables
2023-08-07 01:14:23,837:INFO:Importing untrained model
2023-08-07 01:14:23,844:INFO:Ridge Classifier Imported successfully
2023-08-07 01:14:23,852:INFO:Starting cross validation
2023-08-07 01:14:23,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:23,960:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,961:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,968:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,981:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,981:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,997:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:23,998:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:24,008:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:24,042:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:24,049:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:24,064:INFO:Calculating mean and std
2023-08-07 01:14:24,065:INFO:Creating metrics dataframe
2023-08-07 01:14:24,093:INFO:Uploading results into container
2023-08-07 01:14:24,095:INFO:Uploading model into container now
2023-08-07 01:14:24,096:INFO:_master_model_container: 6
2023-08-07 01:14:24,097:INFO:_display_container: 2
2023-08-07 01:14:24,098:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-08-07 01:14:24,098:INFO:create_model() successfully completed......................................
2023-08-07 01:14:24,190:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:24,190:INFO:Creating metrics dataframe
2023-08-07 01:14:24,202:INFO:Initializing Random Forest Classifier
2023-08-07 01:14:24,202:INFO:Total runtime is 0.12519463698069255 minutes
2023-08-07 01:14:24,205:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:24,206:INFO:Initializing create_model()
2023-08-07 01:14:24,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:24,207:INFO:Checking exceptions
2023-08-07 01:14:24,207:INFO:Importing libraries
2023-08-07 01:14:24,207:INFO:Copying training dataset
2023-08-07 01:14:24,210:INFO:Defining folds
2023-08-07 01:14:24,210:INFO:Declaring metric variables
2023-08-07 01:14:24,213:INFO:Importing untrained model
2023-08-07 01:14:24,216:INFO:Random Forest Classifier Imported successfully
2023-08-07 01:14:24,225:INFO:Starting cross validation
2023-08-07 01:14:24,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:25,988:INFO:Calculating mean and std
2023-08-07 01:14:25,990:INFO:Creating metrics dataframe
2023-08-07 01:14:26,022:INFO:Uploading results into container
2023-08-07 01:14:26,024:INFO:Uploading model into container now
2023-08-07 01:14:26,024:INFO:_master_model_container: 7
2023-08-07 01:14:26,025:INFO:_display_container: 2
2023-08-07 01:14:26,025:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-08-07 01:14:26,025:INFO:create_model() successfully completed......................................
2023-08-07 01:14:26,083:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:26,084:INFO:Creating metrics dataframe
2023-08-07 01:14:26,097:INFO:Initializing Quadratic Discriminant Analysis
2023-08-07 01:14:26,097:INFO:Total runtime is 0.15677925348281863 minutes
2023-08-07 01:14:26,103:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:26,103:INFO:Initializing create_model()
2023-08-07 01:14:26,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:26,103:INFO:Checking exceptions
2023-08-07 01:14:26,104:INFO:Importing libraries
2023-08-07 01:14:26,104:INFO:Copying training dataset
2023-08-07 01:14:26,111:INFO:Defining folds
2023-08-07 01:14:26,111:INFO:Declaring metric variables
2023-08-07 01:14:26,114:INFO:Importing untrained model
2023-08-07 01:14:26,118:INFO:Quadratic Discriminant Analysis Imported successfully
2023-08-07 01:14:26,129:INFO:Starting cross validation
2023-08-07 01:14:26,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:26,399:INFO:Calculating mean and std
2023-08-07 01:14:26,400:INFO:Creating metrics dataframe
2023-08-07 01:14:26,411:INFO:Uploading results into container
2023-08-07 01:14:26,412:INFO:Uploading model into container now
2023-08-07 01:14:26,412:INFO:_master_model_container: 8
2023-08-07 01:14:26,413:INFO:_display_container: 2
2023-08-07 01:14:26,413:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-08-07 01:14:26,413:INFO:create_model() successfully completed......................................
2023-08-07 01:14:26,466:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:26,466:INFO:Creating metrics dataframe
2023-08-07 01:14:26,479:INFO:Initializing Ada Boost Classifier
2023-08-07 01:14:26,479:INFO:Total runtime is 0.1631465276082357 minutes
2023-08-07 01:14:26,482:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:26,483:INFO:Initializing create_model()
2023-08-07 01:14:26,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:26,483:INFO:Checking exceptions
2023-08-07 01:14:26,483:INFO:Importing libraries
2023-08-07 01:14:26,483:INFO:Copying training dataset
2023-08-07 01:14:26,487:INFO:Defining folds
2023-08-07 01:14:26,487:INFO:Declaring metric variables
2023-08-07 01:14:26,490:INFO:Importing untrained model
2023-08-07 01:14:26,494:INFO:Ada Boost Classifier Imported successfully
2023-08-07 01:14:26,502:INFO:Starting cross validation
2023-08-07 01:14:26,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:27,555:INFO:Calculating mean and std
2023-08-07 01:14:27,557:INFO:Creating metrics dataframe
2023-08-07 01:14:27,585:INFO:Uploading results into container
2023-08-07 01:14:27,586:INFO:Uploading model into container now
2023-08-07 01:14:27,586:INFO:_master_model_container: 9
2023-08-07 01:14:27,586:INFO:_display_container: 2
2023-08-07 01:14:27,587:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-08-07 01:14:27,587:INFO:create_model() successfully completed......................................
2023-08-07 01:14:27,650:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:27,650:INFO:Creating metrics dataframe
2023-08-07 01:14:27,664:INFO:Initializing Gradient Boosting Classifier
2023-08-07 01:14:27,664:INFO:Total runtime is 0.1828959385553996 minutes
2023-08-07 01:14:27,670:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:27,671:INFO:Initializing create_model()
2023-08-07 01:14:27,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:27,671:INFO:Checking exceptions
2023-08-07 01:14:27,671:INFO:Importing libraries
2023-08-07 01:14:27,671:INFO:Copying training dataset
2023-08-07 01:14:27,677:INFO:Defining folds
2023-08-07 01:14:27,677:INFO:Declaring metric variables
2023-08-07 01:14:27,682:INFO:Importing untrained model
2023-08-07 01:14:27,688:INFO:Gradient Boosting Classifier Imported successfully
2023-08-07 01:14:27,697:INFO:Starting cross validation
2023-08-07 01:14:27,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:29,060:INFO:Calculating mean and std
2023-08-07 01:14:29,061:INFO:Creating metrics dataframe
2023-08-07 01:14:29,092:INFO:Uploading results into container
2023-08-07 01:14:29,093:INFO:Uploading model into container now
2023-08-07 01:14:29,093:INFO:_master_model_container: 10
2023-08-07 01:14:29,093:INFO:_display_container: 2
2023-08-07 01:14:29,093:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-07 01:14:29,094:INFO:create_model() successfully completed......................................
2023-08-07 01:14:29,149:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:29,149:INFO:Creating metrics dataframe
2023-08-07 01:14:29,162:INFO:Initializing Linear Discriminant Analysis
2023-08-07 01:14:29,162:INFO:Total runtime is 0.20786317189534506 minutes
2023-08-07 01:14:29,166:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:29,166:INFO:Initializing create_model()
2023-08-07 01:14:29,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:29,167:INFO:Checking exceptions
2023-08-07 01:14:29,167:INFO:Importing libraries
2023-08-07 01:14:29,167:INFO:Copying training dataset
2023-08-07 01:14:29,171:INFO:Defining folds
2023-08-07 01:14:29,172:INFO:Declaring metric variables
2023-08-07 01:14:29,178:INFO:Importing untrained model
2023-08-07 01:14:29,185:INFO:Linear Discriminant Analysis Imported successfully
2023-08-07 01:14:29,196:INFO:Starting cross validation
2023-08-07 01:14:29,197:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:29,720:INFO:Calculating mean and std
2023-08-07 01:14:29,722:INFO:Creating metrics dataframe
2023-08-07 01:14:29,765:INFO:Uploading results into container
2023-08-07 01:14:29,766:INFO:Uploading model into container now
2023-08-07 01:14:29,766:INFO:_master_model_container: 11
2023-08-07 01:14:29,767:INFO:_display_container: 2
2023-08-07 01:14:29,767:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-08-07 01:14:29,767:INFO:create_model() successfully completed......................................
2023-08-07 01:14:29,826:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:29,826:INFO:Creating metrics dataframe
2023-08-07 01:14:29,839:INFO:Initializing Extra Trees Classifier
2023-08-07 01:14:29,840:INFO:Total runtime is 0.21916329860687256 minutes
2023-08-07 01:14:29,844:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:29,844:INFO:Initializing create_model()
2023-08-07 01:14:29,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:29,845:INFO:Checking exceptions
2023-08-07 01:14:29,845:INFO:Importing libraries
2023-08-07 01:14:29,845:INFO:Copying training dataset
2023-08-07 01:14:29,850:INFO:Defining folds
2023-08-07 01:14:29,850:INFO:Declaring metric variables
2023-08-07 01:14:29,856:INFO:Importing untrained model
2023-08-07 01:14:29,860:INFO:Extra Trees Classifier Imported successfully
2023-08-07 01:14:29,868:INFO:Starting cross validation
2023-08-07 01:14:29,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:32,232:INFO:Calculating mean and std
2023-08-07 01:14:32,233:INFO:Creating metrics dataframe
2023-08-07 01:14:32,283:INFO:Uploading results into container
2023-08-07 01:14:32,284:INFO:Uploading model into container now
2023-08-07 01:14:32,284:INFO:_master_model_container: 12
2023-08-07 01:14:32,284:INFO:_display_container: 2
2023-08-07 01:14:32,285:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-08-07 01:14:32,285:INFO:create_model() successfully completed......................................
2023-08-07 01:14:32,346:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:32,346:INFO:Creating metrics dataframe
2023-08-07 01:14:32,361:INFO:Initializing Light Gradient Boosting Machine
2023-08-07 01:14:32,361:INFO:Total runtime is 0.2611827810605367 minutes
2023-08-07 01:14:32,365:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:32,366:INFO:Initializing create_model()
2023-08-07 01:14:32,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:32,366:INFO:Checking exceptions
2023-08-07 01:14:32,366:INFO:Importing libraries
2023-08-07 01:14:32,366:INFO:Copying training dataset
2023-08-07 01:14:32,373:INFO:Defining folds
2023-08-07 01:14:32,373:INFO:Declaring metric variables
2023-08-07 01:14:32,378:INFO:Importing untrained model
2023-08-07 01:14:32,382:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-07 01:14:32,393:INFO:Starting cross validation
2023-08-07 01:14:32,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:34,676:INFO:Calculating mean and std
2023-08-07 01:14:34,680:INFO:Creating metrics dataframe
2023-08-07 01:14:34,752:INFO:Uploading results into container
2023-08-07 01:14:34,752:INFO:Uploading model into container now
2023-08-07 01:14:34,753:INFO:_master_model_container: 13
2023-08-07 01:14:34,753:INFO:_display_container: 2
2023-08-07 01:14:34,754:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-08-07 01:14:34,754:INFO:create_model() successfully completed......................................
2023-08-07 01:14:34,814:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:34,815:INFO:Creating metrics dataframe
2023-08-07 01:14:34,829:INFO:Initializing Dummy Classifier
2023-08-07 01:14:34,830:INFO:Total runtime is 0.30233280261357626 minutes
2023-08-07 01:14:34,834:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:34,834:INFO:Initializing create_model()
2023-08-07 01:14:34,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527118580>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:34,834:INFO:Checking exceptions
2023-08-07 01:14:34,834:INFO:Importing libraries
2023-08-07 01:14:34,834:INFO:Copying training dataset
2023-08-07 01:14:34,840:INFO:Defining folds
2023-08-07 01:14:34,840:INFO:Declaring metric variables
2023-08-07 01:14:34,846:INFO:Importing untrained model
2023-08-07 01:14:34,850:INFO:Dummy Classifier Imported successfully
2023-08-07 01:14:34,859:INFO:Starting cross validation
2023-08-07 01:14:34,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:34,994:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,010:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,020:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,033:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,035:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,057:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,071:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,085:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,229:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,241:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:35,548:INFO:Calculating mean and std
2023-08-07 01:14:35,549:INFO:Creating metrics dataframe
2023-08-07 01:14:35,609:INFO:Uploading results into container
2023-08-07 01:14:35,610:INFO:Uploading model into container now
2023-08-07 01:14:35,611:INFO:_master_model_container: 14
2023-08-07 01:14:35,611:INFO:_display_container: 2
2023-08-07 01:14:35,611:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-08-07 01:14:35,611:INFO:create_model() successfully completed......................................
2023-08-07 01:14:35,673:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:35,673:INFO:Creating metrics dataframe
2023-08-07 01:14:35,699:INFO:Initializing create_model()
2023-08-07 01:14:35,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:35,700:INFO:Checking exceptions
2023-08-07 01:14:35,702:INFO:Importing libraries
2023-08-07 01:14:35,702:INFO:Copying training dataset
2023-08-07 01:14:35,708:INFO:Defining folds
2023-08-07 01:14:35,708:INFO:Declaring metric variables
2023-08-07 01:14:35,708:INFO:Importing untrained model
2023-08-07 01:14:35,708:INFO:Declaring custom model
2023-08-07 01:14:35,709:INFO:Logistic Regression Imported successfully
2023-08-07 01:14:35,710:INFO:Cross validation set to False
2023-08-07 01:14:35,710:INFO:Fitting Model
2023-08-07 01:14:35,796:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:35,796:INFO:create_model() successfully completed......................................
2023-08-07 01:14:35,892:INFO:_master_model_container: 14
2023-08-07 01:14:35,893:INFO:_display_container: 2
2023-08-07 01:14:35,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:35,893:INFO:compare_models() successfully completed......................................
2023-08-07 01:14:35,894:INFO:Initializing compare_models()
2023-08-07 01:14:35,894:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-08-07 01:14:35,894:INFO:Checking exceptions
2023-08-07 01:14:35,897:INFO:Preparing display monitor
2023-08-07 01:14:35,925:INFO:Initializing Logistic Regression
2023-08-07 01:14:35,925:INFO:Total runtime is 0.0 minutes
2023-08-07 01:14:35,930:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:35,931:INFO:Initializing create_model()
2023-08-07 01:14:35,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:35,931:INFO:Checking exceptions
2023-08-07 01:14:35,931:INFO:Importing libraries
2023-08-07 01:14:35,931:INFO:Copying training dataset
2023-08-07 01:14:35,937:INFO:Defining folds
2023-08-07 01:14:35,937:INFO:Declaring metric variables
2023-08-07 01:14:35,942:INFO:Importing untrained model
2023-08-07 01:14:35,946:INFO:Logistic Regression Imported successfully
2023-08-07 01:14:35,954:INFO:Starting cross validation
2023-08-07 01:14:35,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:36,704:INFO:Calculating mean and std
2023-08-07 01:14:36,704:INFO:Creating metrics dataframe
2023-08-07 01:14:36,756:INFO:Uploading results into container
2023-08-07 01:14:36,757:INFO:Uploading model into container now
2023-08-07 01:14:36,757:INFO:_master_model_container: 1
2023-08-07 01:14:36,758:INFO:_display_container: 2
2023-08-07 01:14:36,758:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:36,758:INFO:create_model() successfully completed......................................
2023-08-07 01:14:36,814:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:36,814:INFO:Creating metrics dataframe
2023-08-07 01:14:36,824:INFO:Initializing K Neighbors Classifier
2023-08-07 01:14:36,824:INFO:Total runtime is 0.014983344078063964 minutes
2023-08-07 01:14:36,827:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:36,828:INFO:Initializing create_model()
2023-08-07 01:14:36,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:36,828:INFO:Checking exceptions
2023-08-07 01:14:36,828:INFO:Importing libraries
2023-08-07 01:14:36,828:INFO:Copying training dataset
2023-08-07 01:14:36,832:INFO:Defining folds
2023-08-07 01:14:36,832:INFO:Declaring metric variables
2023-08-07 01:14:36,836:INFO:Importing untrained model
2023-08-07 01:14:36,840:INFO:K Neighbors Classifier Imported successfully
2023-08-07 01:14:36,847:INFO:Starting cross validation
2023-08-07 01:14:36,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:37,622:INFO:Calculating mean and std
2023-08-07 01:14:37,623:INFO:Creating metrics dataframe
2023-08-07 01:14:37,675:INFO:Uploading results into container
2023-08-07 01:14:37,676:INFO:Uploading model into container now
2023-08-07 01:14:37,676:INFO:_master_model_container: 2
2023-08-07 01:14:37,676:INFO:_display_container: 2
2023-08-07 01:14:37,677:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-08-07 01:14:37,677:INFO:create_model() successfully completed......................................
2023-08-07 01:14:37,732:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:37,732:INFO:Creating metrics dataframe
2023-08-07 01:14:37,743:INFO:Initializing Naive Bayes
2023-08-07 01:14:37,744:INFO:Total runtime is 0.03031667470932007 minutes
2023-08-07 01:14:37,747:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:37,748:INFO:Initializing create_model()
2023-08-07 01:14:37,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:37,748:INFO:Checking exceptions
2023-08-07 01:14:37,748:INFO:Importing libraries
2023-08-07 01:14:37,748:INFO:Copying training dataset
2023-08-07 01:14:37,753:INFO:Defining folds
2023-08-07 01:14:37,753:INFO:Declaring metric variables
2023-08-07 01:14:37,757:INFO:Importing untrained model
2023-08-07 01:14:37,761:INFO:Naive Bayes Imported successfully
2023-08-07 01:14:37,768:INFO:Starting cross validation
2023-08-07 01:14:37,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:38,442:INFO:Calculating mean and std
2023-08-07 01:14:38,444:INFO:Creating metrics dataframe
2023-08-07 01:14:38,514:INFO:Uploading results into container
2023-08-07 01:14:38,514:INFO:Uploading model into container now
2023-08-07 01:14:38,515:INFO:_master_model_container: 3
2023-08-07 01:14:38,515:INFO:_display_container: 2
2023-08-07 01:14:38,515:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-08-07 01:14:38,515:INFO:create_model() successfully completed......................................
2023-08-07 01:14:38,575:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:38,575:INFO:Creating metrics dataframe
2023-08-07 01:14:38,586:INFO:Initializing Decision Tree Classifier
2023-08-07 01:14:38,586:INFO:Total runtime is 0.044350039958953855 minutes
2023-08-07 01:14:38,591:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:38,592:INFO:Initializing create_model()
2023-08-07 01:14:38,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:38,592:INFO:Checking exceptions
2023-08-07 01:14:38,592:INFO:Importing libraries
2023-08-07 01:14:38,592:INFO:Copying training dataset
2023-08-07 01:14:38,597:INFO:Defining folds
2023-08-07 01:14:38,597:INFO:Declaring metric variables
2023-08-07 01:14:38,601:INFO:Importing untrained model
2023-08-07 01:14:38,607:INFO:Decision Tree Classifier Imported successfully
2023-08-07 01:14:38,615:INFO:Starting cross validation
2023-08-07 01:14:38,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:39,342:INFO:Calculating mean and std
2023-08-07 01:14:39,343:INFO:Creating metrics dataframe
2023-08-07 01:14:39,409:INFO:Uploading results into container
2023-08-07 01:14:39,410:INFO:Uploading model into container now
2023-08-07 01:14:39,411:INFO:_master_model_container: 4
2023-08-07 01:14:39,411:INFO:_display_container: 2
2023-08-07 01:14:39,411:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-08-07 01:14:39,411:INFO:create_model() successfully completed......................................
2023-08-07 01:14:39,469:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:39,469:INFO:Creating metrics dataframe
2023-08-07 01:14:39,480:INFO:Initializing SVM - Linear Kernel
2023-08-07 01:14:39,480:INFO:Total runtime is 0.059250644842783605 minutes
2023-08-07 01:14:39,484:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:39,484:INFO:Initializing create_model()
2023-08-07 01:14:39,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:39,485:INFO:Checking exceptions
2023-08-07 01:14:39,485:INFO:Importing libraries
2023-08-07 01:14:39,485:INFO:Copying training dataset
2023-08-07 01:14:39,490:INFO:Defining folds
2023-08-07 01:14:39,490:INFO:Declaring metric variables
2023-08-07 01:14:39,495:INFO:Importing untrained model
2023-08-07 01:14:39,502:INFO:SVM - Linear Kernel Imported successfully
2023-08-07 01:14:39,514:INFO:Starting cross validation
2023-08-07 01:14:39,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:39,631:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,647:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,654:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,659:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,659:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,669:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:39,681:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,694:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,711:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:39,835:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:39,836:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-07 01:14:40,232:INFO:Calculating mean and std
2023-08-07 01:14:40,233:INFO:Creating metrics dataframe
2023-08-07 01:14:40,284:INFO:Uploading results into container
2023-08-07 01:14:40,285:INFO:Uploading model into container now
2023-08-07 01:14:40,285:INFO:_master_model_container: 5
2023-08-07 01:14:40,286:INFO:_display_container: 2
2023-08-07 01:14:40,286:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-07 01:14:40,286:INFO:create_model() successfully completed......................................
2023-08-07 01:14:40,341:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:40,341:INFO:Creating metrics dataframe
2023-08-07 01:14:40,353:INFO:Initializing Ridge Classifier
2023-08-07 01:14:40,353:INFO:Total runtime is 0.07380001544952391 minutes
2023-08-07 01:14:40,358:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:40,359:INFO:Initializing create_model()
2023-08-07 01:14:40,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:40,359:INFO:Checking exceptions
2023-08-07 01:14:40,359:INFO:Importing libraries
2023-08-07 01:14:40,359:INFO:Copying training dataset
2023-08-07 01:14:40,364:INFO:Defining folds
2023-08-07 01:14:40,364:INFO:Declaring metric variables
2023-08-07 01:14:40,369:INFO:Importing untrained model
2023-08-07 01:14:40,374:INFO:Ridge Classifier Imported successfully
2023-08-07 01:14:40,383:INFO:Starting cross validation
2023-08-07 01:14:40,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:40,495:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,511:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,512:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,514:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,523:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,531:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,538:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,563:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,789:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:40,790:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-07 01:14:41,076:INFO:Calculating mean and std
2023-08-07 01:14:41,077:INFO:Creating metrics dataframe
2023-08-07 01:14:41,132:INFO:Uploading results into container
2023-08-07 01:14:41,133:INFO:Uploading model into container now
2023-08-07 01:14:41,133:INFO:_master_model_container: 6
2023-08-07 01:14:41,133:INFO:_display_container: 2
2023-08-07 01:14:41,134:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-08-07 01:14:41,134:INFO:create_model() successfully completed......................................
2023-08-07 01:14:41,189:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:41,189:INFO:Creating metrics dataframe
2023-08-07 01:14:41,200:INFO:Initializing Random Forest Classifier
2023-08-07 01:14:41,201:INFO:Total runtime is 0.08793407678604125 minutes
2023-08-07 01:14:41,204:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:41,205:INFO:Initializing create_model()
2023-08-07 01:14:41,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:41,205:INFO:Checking exceptions
2023-08-07 01:14:41,205:INFO:Importing libraries
2023-08-07 01:14:41,205:INFO:Copying training dataset
2023-08-07 01:14:41,210:INFO:Defining folds
2023-08-07 01:14:41,210:INFO:Declaring metric variables
2023-08-07 01:14:41,214:INFO:Importing untrained model
2023-08-07 01:14:41,218:INFO:Random Forest Classifier Imported successfully
2023-08-07 01:14:41,225:INFO:Starting cross validation
2023-08-07 01:14:41,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:42,585:INFO:Calculating mean and std
2023-08-07 01:14:42,587:INFO:Creating metrics dataframe
2023-08-07 01:14:42,658:INFO:Uploading results into container
2023-08-07 01:14:42,659:INFO:Uploading model into container now
2023-08-07 01:14:42,660:INFO:_master_model_container: 7
2023-08-07 01:14:42,660:INFO:_display_container: 2
2023-08-07 01:14:42,661:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-08-07 01:14:42,661:INFO:create_model() successfully completed......................................
2023-08-07 01:14:42,724:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:42,724:INFO:Creating metrics dataframe
2023-08-07 01:14:42,738:INFO:Initializing Quadratic Discriminant Analysis
2023-08-07 01:14:42,738:INFO:Total runtime is 0.11355003913243611 minutes
2023-08-07 01:14:42,744:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:42,745:INFO:Initializing create_model()
2023-08-07 01:14:42,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:42,745:INFO:Checking exceptions
2023-08-07 01:14:42,746:INFO:Importing libraries
2023-08-07 01:14:42,746:INFO:Copying training dataset
2023-08-07 01:14:42,751:INFO:Defining folds
2023-08-07 01:14:42,751:INFO:Declaring metric variables
2023-08-07 01:14:42,757:INFO:Importing untrained model
2023-08-07 01:14:42,762:INFO:Quadratic Discriminant Analysis Imported successfully
2023-08-07 01:14:42,771:INFO:Starting cross validation
2023-08-07 01:14:42,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:43,487:INFO:Calculating mean and std
2023-08-07 01:14:43,488:INFO:Creating metrics dataframe
2023-08-07 01:14:43,547:INFO:Uploading results into container
2023-08-07 01:14:43,548:INFO:Uploading model into container now
2023-08-07 01:14:43,548:INFO:_master_model_container: 8
2023-08-07 01:14:43,548:INFO:_display_container: 2
2023-08-07 01:14:43,549:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-08-07 01:14:43,549:INFO:create_model() successfully completed......................................
2023-08-07 01:14:43,612:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:43,612:INFO:Creating metrics dataframe
2023-08-07 01:14:43,625:INFO:Initializing Ada Boost Classifier
2023-08-07 01:14:43,625:INFO:Total runtime is 0.12833335002263385 minutes
2023-08-07 01:14:43,629:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:43,629:INFO:Initializing create_model()
2023-08-07 01:14:43,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:43,629:INFO:Checking exceptions
2023-08-07 01:14:43,630:INFO:Importing libraries
2023-08-07 01:14:43,630:INFO:Copying training dataset
2023-08-07 01:14:43,636:INFO:Defining folds
2023-08-07 01:14:43,636:INFO:Declaring metric variables
2023-08-07 01:14:43,641:INFO:Importing untrained model
2023-08-07 01:14:43,647:INFO:Ada Boost Classifier Imported successfully
2023-08-07 01:14:43,655:INFO:Starting cross validation
2023-08-07 01:14:43,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:44,621:INFO:Calculating mean and std
2023-08-07 01:14:44,623:INFO:Creating metrics dataframe
2023-08-07 01:14:44,690:INFO:Uploading results into container
2023-08-07 01:14:44,691:INFO:Uploading model into container now
2023-08-07 01:14:44,692:INFO:_master_model_container: 9
2023-08-07 01:14:44,692:INFO:_display_container: 2
2023-08-07 01:14:44,692:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-08-07 01:14:44,692:INFO:create_model() successfully completed......................................
2023-08-07 01:14:44,752:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:44,753:INFO:Creating metrics dataframe
2023-08-07 01:14:44,765:INFO:Initializing Gradient Boosting Classifier
2023-08-07 01:14:44,766:INFO:Total runtime is 0.14735000928243 minutes
2023-08-07 01:14:44,770:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:44,771:INFO:Initializing create_model()
2023-08-07 01:14:44,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:44,771:INFO:Checking exceptions
2023-08-07 01:14:44,771:INFO:Importing libraries
2023-08-07 01:14:44,771:INFO:Copying training dataset
2023-08-07 01:14:44,776:INFO:Defining folds
2023-08-07 01:14:44,776:INFO:Declaring metric variables
2023-08-07 01:14:44,781:INFO:Importing untrained model
2023-08-07 01:14:44,786:INFO:Gradient Boosting Classifier Imported successfully
2023-08-07 01:14:44,795:INFO:Starting cross validation
2023-08-07 01:14:44,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:45,793:INFO:Calculating mean and std
2023-08-07 01:14:45,796:INFO:Creating metrics dataframe
2023-08-07 01:14:45,861:INFO:Uploading results into container
2023-08-07 01:14:45,862:INFO:Uploading model into container now
2023-08-07 01:14:45,862:INFO:_master_model_container: 10
2023-08-07 01:14:45,862:INFO:_display_container: 2
2023-08-07 01:14:45,863:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-07 01:14:45,863:INFO:create_model() successfully completed......................................
2023-08-07 01:14:45,927:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:45,927:INFO:Creating metrics dataframe
2023-08-07 01:14:45,941:INFO:Initializing Linear Discriminant Analysis
2023-08-07 01:14:45,941:INFO:Total runtime is 0.1669333299001058 minutes
2023-08-07 01:14:45,946:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:45,947:INFO:Initializing create_model()
2023-08-07 01:14:45,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:45,947:INFO:Checking exceptions
2023-08-07 01:14:45,947:INFO:Importing libraries
2023-08-07 01:14:45,947:INFO:Copying training dataset
2023-08-07 01:14:45,954:INFO:Defining folds
2023-08-07 01:14:45,954:INFO:Declaring metric variables
2023-08-07 01:14:45,960:INFO:Importing untrained model
2023-08-07 01:14:45,965:INFO:Linear Discriminant Analysis Imported successfully
2023-08-07 01:14:45,974:INFO:Starting cross validation
2023-08-07 01:14:45,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:46,633:INFO:Calculating mean and std
2023-08-07 01:14:46,634:INFO:Creating metrics dataframe
2023-08-07 01:14:46,688:INFO:Uploading results into container
2023-08-07 01:14:46,689:INFO:Uploading model into container now
2023-08-07 01:14:46,689:INFO:_master_model_container: 11
2023-08-07 01:14:46,689:INFO:_display_container: 2
2023-08-07 01:14:46,690:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-08-07 01:14:46,690:INFO:create_model() successfully completed......................................
2023-08-07 01:14:46,746:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:46,746:INFO:Creating metrics dataframe
2023-08-07 01:14:46,759:INFO:Initializing Extra Trees Classifier
2023-08-07 01:14:46,760:INFO:Total runtime is 0.1805672526359558 minutes
2023-08-07 01:14:46,763:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:46,763:INFO:Initializing create_model()
2023-08-07 01:14:46,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:46,764:INFO:Checking exceptions
2023-08-07 01:14:46,764:INFO:Importing libraries
2023-08-07 01:14:46,764:INFO:Copying training dataset
2023-08-07 01:14:46,768:INFO:Defining folds
2023-08-07 01:14:46,769:INFO:Declaring metric variables
2023-08-07 01:14:46,772:INFO:Importing untrained model
2023-08-07 01:14:46,776:INFO:Extra Trees Classifier Imported successfully
2023-08-07 01:14:46,785:INFO:Starting cross validation
2023-08-07 01:14:46,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:48,024:INFO:Calculating mean and std
2023-08-07 01:14:48,025:INFO:Creating metrics dataframe
2023-08-07 01:14:48,085:INFO:Uploading results into container
2023-08-07 01:14:48,086:INFO:Uploading model into container now
2023-08-07 01:14:48,086:INFO:_master_model_container: 12
2023-08-07 01:14:48,086:INFO:_display_container: 2
2023-08-07 01:14:48,087:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-08-07 01:14:48,087:INFO:create_model() successfully completed......................................
2023-08-07 01:14:48,145:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:48,145:INFO:Creating metrics dataframe
2023-08-07 01:14:48,158:INFO:Initializing Light Gradient Boosting Machine
2023-08-07 01:14:48,159:INFO:Total runtime is 0.2039008100827535 minutes
2023-08-07 01:14:48,162:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:48,163:INFO:Initializing create_model()
2023-08-07 01:14:48,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:48,163:INFO:Checking exceptions
2023-08-07 01:14:48,163:INFO:Importing libraries
2023-08-07 01:14:48,163:INFO:Copying training dataset
2023-08-07 01:14:48,170:INFO:Defining folds
2023-08-07 01:14:48,170:INFO:Declaring metric variables
2023-08-07 01:14:48,175:INFO:Importing untrained model
2023-08-07 01:14:48,181:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-07 01:14:48,209:INFO:Starting cross validation
2023-08-07 01:14:48,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:49,099:INFO:Calculating mean and std
2023-08-07 01:14:49,100:INFO:Creating metrics dataframe
2023-08-07 01:14:49,159:INFO:Uploading results into container
2023-08-07 01:14:49,159:INFO:Uploading model into container now
2023-08-07 01:14:49,160:INFO:_master_model_container: 13
2023-08-07 01:14:49,160:INFO:_display_container: 2
2023-08-07 01:14:49,160:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-08-07 01:14:49,160:INFO:create_model() successfully completed......................................
2023-08-07 01:14:49,217:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:49,217:INFO:Creating metrics dataframe
2023-08-07 01:14:49,231:INFO:Initializing Dummy Classifier
2023-08-07 01:14:49,231:INFO:Total runtime is 0.22176752885182696 minutes
2023-08-07 01:14:49,235:INFO:SubProcess create_model() called ==================================
2023-08-07 01:14:49,235:INFO:Initializing create_model()
2023-08-07 01:14:49,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023527178640>, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:49,236:INFO:Checking exceptions
2023-08-07 01:14:49,236:INFO:Importing libraries
2023-08-07 01:14:49,236:INFO:Copying training dataset
2023-08-07 01:14:49,241:INFO:Defining folds
2023-08-07 01:14:49,241:INFO:Declaring metric variables
2023-08-07 01:14:49,245:INFO:Importing untrained model
2023-08-07 01:14:49,250:INFO:Dummy Classifier Imported successfully
2023-08-07 01:14:49,260:INFO:Starting cross validation
2023-08-07 01:14:49,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-07 01:14:49,393:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,396:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,421:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,425:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,428:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,440:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,463:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,470:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,635:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,641:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-07 01:14:49,911:INFO:Calculating mean and std
2023-08-07 01:14:49,912:INFO:Creating metrics dataframe
2023-08-07 01:14:49,965:INFO:Uploading results into container
2023-08-07 01:14:49,966:INFO:Uploading model into container now
2023-08-07 01:14:49,967:INFO:_master_model_container: 14
2023-08-07 01:14:49,967:INFO:_display_container: 2
2023-08-07 01:14:49,967:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-08-07 01:14:49,967:INFO:create_model() successfully completed......................................
2023-08-07 01:14:50,024:INFO:SubProcess create_model() end ==================================
2023-08-07 01:14:50,024:INFO:Creating metrics dataframe
2023-08-07 01:14:50,047:INFO:Initializing create_model()
2023-08-07 01:14:50,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-07 01:14:50,048:INFO:Checking exceptions
2023-08-07 01:14:50,050:INFO:Importing libraries
2023-08-07 01:14:50,050:INFO:Copying training dataset
2023-08-07 01:14:50,055:INFO:Defining folds
2023-08-07 01:14:50,055:INFO:Declaring metric variables
2023-08-07 01:14:50,055:INFO:Importing untrained model
2023-08-07 01:14:50,055:INFO:Declaring custom model
2023-08-07 01:14:50,057:INFO:Logistic Regression Imported successfully
2023-08-07 01:14:50,058:INFO:Cross validation set to False
2023-08-07 01:14:50,058:INFO:Fitting Model
2023-08-07 01:14:50,140:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:50,140:INFO:create_model() successfully completed......................................
2023-08-07 01:14:50,229:INFO:_master_model_container: 14
2023-08-07 01:14:50,229:INFO:_display_container: 2
2023-08-07 01:14:50,229:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-07 01:14:50,230:INFO:compare_models() successfully completed......................................
2023-08-07 01:15:03,734:INFO:Initializing plot_model()
2023-08-07 01:15:03,734:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, system=True)
2023-08-07 01:15:03,734:INFO:Checking exceptions
2023-08-07 01:15:03,740:INFO:Preloading libraries
2023-08-07 01:15:03,741:INFO:Copying training dataset
2023-08-07 01:15:03,742:INFO:Plot type: auc
2023-08-07 01:15:03,810:INFO:Fitting Model
2023-08-07 01:15:03,811:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-08-07 01:15:03,811:INFO:Scoring test/hold-out set
2023-08-07 01:15:04,004:INFO:Visual Rendered Successfully
2023-08-07 01:15:04,060:INFO:plot_model() successfully completed......................................
2023-08-07 01:15:04,061:INFO:Initializing plot_model()
2023-08-07 01:15:04,061:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, system=True)
2023-08-07 01:15:04,061:INFO:Checking exceptions
2023-08-07 01:15:04,077:INFO:Preloading libraries
2023-08-07 01:15:04,078:INFO:Copying training dataset
2023-08-07 01:15:04,078:INFO:Plot type: auc
2023-08-07 01:15:04,140:INFO:Fitting Model
2023-08-07 01:15:04,140:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-08-07 01:15:04,141:INFO:Scoring test/hold-out set
2023-08-07 01:15:04,318:INFO:Visual Rendered Successfully
2023-08-07 01:15:04,374:INFO:plot_model() successfully completed......................................
2023-08-07 01:15:16,797:INFO:Initializing plot_model()
2023-08-07 01:15:16,797:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, system=True)
2023-08-07 01:15:16,797:INFO:Checking exceptions
2023-08-07 01:15:16,803:INFO:Preloading libraries
2023-08-07 01:15:16,804:INFO:Copying training dataset
2023-08-07 01:15:16,804:INFO:Plot type: confusion_matrix
2023-08-07 01:15:16,872:INFO:Fitting Model
2023-08-07 01:15:16,872:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-08-07 01:15:16,873:INFO:Scoring test/hold-out set
2023-08-07 01:15:16,974:INFO:Visual Rendered Successfully
2023-08-07 01:15:17,033:INFO:plot_model() successfully completed......................................
2023-08-07 01:15:17,034:INFO:Initializing plot_model()
2023-08-07 01:15:17,034:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, system=True)
2023-08-07 01:15:17,034:INFO:Checking exceptions
2023-08-07 01:15:17,038:INFO:Preloading libraries
2023-08-07 01:15:17,038:INFO:Copying training dataset
2023-08-07 01:15:17,038:INFO:Plot type: confusion_matrix
2023-08-07 01:15:17,099:INFO:Fitting Model
2023-08-07 01:15:17,100:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\envs\myenv\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-08-07 01:15:17,100:INFO:Scoring test/hold-out set
2023-08-07 01:15:17,198:INFO:Visual Rendered Successfully
2023-08-07 01:15:17,255:INFO:plot_model() successfully completed......................................
2023-08-07 01:15:29,795:INFO:Initializing predict_model()
2023-08-07 01:15:29,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023526F7FD30>)
2023-08-07 01:15:29,796:INFO:Checking exceptions
2023-08-07 01:15:29,797:INFO:Preloading libraries
2023-08-07 01:15:29,917:INFO:Initializing predict_model()
2023-08-07 01:15:29,918:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000235031F5F70>)
2023-08-07 01:15:29,918:INFO:Checking exceptions
2023-08-07 01:15:29,918:INFO:Preloading libraries
2023-08-07 01:15:50,098:INFO:Initializing predict_model()
2023-08-07 01:15:50,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023524C37C10>)
2023-08-07 01:15:50,098:INFO:Checking exceptions
2023-08-07 01:15:50,098:INFO:Preloading libraries
2023-08-07 01:15:50,101:INFO:Set up data.
2023-08-07 01:15:50,107:INFO:Set up index.
2023-08-07 01:15:50,202:INFO:Initializing predict_model()
2023-08-07 01:15:50,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023524C37C10>)
2023-08-07 01:15:50,203:INFO:Checking exceptions
2023-08-07 01:15:50,203:INFO:Preloading libraries
2023-08-07 01:15:50,205:INFO:Set up data.
2023-08-07 01:15:50,213:INFO:Set up index.
2023-08-07 01:16:00,197:INFO:Initializing predict_model()
2023-08-07 01:16:00,197:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023526F7F820>)
2023-08-07 01:16:00,197:INFO:Checking exceptions
2023-08-07 01:16:00,197:INFO:Preloading libraries
2023-08-07 01:16:00,200:INFO:Set up data.
2023-08-07 01:16:00,208:INFO:Set up index.
2023-08-07 01:16:00,301:INFO:Initializing predict_model()
2023-08-07 01:16:00,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002350327EDC0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000235276D55E0>)
2023-08-07 01:16:00,301:INFO:Checking exceptions
2023-08-07 01:16:00,302:INFO:Preloading libraries
2023-08-07 01:16:00,304:INFO:Set up data.
2023-08-07 01:16:00,313:INFO:Set up index.
2023-08-07 01:16:20,281:INFO:Initializing save_model()
2023-08-07 01:16:20,281:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-08-07 01:16:20,281:INFO:Adding model into prep_pipe
2023-08-07 01:16:20,287:INFO:my_best_pipeline.pkl saved in current working directory
2023-08-07 01:16:20,295:INFO:Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-08-07 01:16:20,295:INFO:save_model() successfully completed......................................
2023-08-07 01:16:20,395:INFO:Initializing save_model()
2023-08-07 01:16:20,396:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-08-07 01:16:20,396:INFO:Adding model into prep_pipe
2023-08-07 01:16:20,400:INFO:my_best_pipeline.pkl saved in current working directory
2023-08-07 01:16:20,405:INFO:Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2023-08-07 01:16:20,405:INFO:save_model() successfully completed......................................
2023-08-07 01:16:31,249:INFO:Initializing load_model()
2023-08-07 01:16:31,249:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 01:16:31,261:INFO:Initializing load_model()
2023-08-07 01:16:31,261:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 01:18:20,989:INFO:Initializing load_model()
2023-08-07 01:18:20,989:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 01:18:47,937:INFO:Initializing load_model()
2023-08-07 01:18:47,938:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 01:18:54,958:INFO:Initializing load_model()
2023-08-07 01:18:54,958:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 01:18:55,002:INFO:Initializing predict_model()
2023-08-07 01:18:55,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023524C33460>, estimator=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (we...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000235031F5F70>)
2023-08-07 01:18:55,002:INFO:Checking exceptions
2023-08-07 01:18:55,003:INFO:Preloading libraries
2023-08-07 01:18:55,005:INFO:Set up data.
2023-08-07 01:18:55,010:INFO:Set up index.
2023-08-07 20:09:46,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:09:46,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:09:46,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:09:46,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:10:57,279:INFO:Initializing load_model()
2023-08-07 20:10:57,280:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 20:10:57,292:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\sklearn\base.py:299: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-07 20:10:57,295:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\sklearn\base.py:299: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-07 20:10:58,866:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.3.1', 'setuptools': '65.6.3', 'pycaret': '3.0.4', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.0', 'joblib': '1.3.1', 'sklearn': '1.2.1', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.7.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-07 20:11:03,429:INFO:Initializing predict_model()
2023-08-07 20:11:03,430:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F46B967A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigree function',
                                             'Age (years)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022F3BD9E680>)
2023-08-07 20:11:03,430:INFO:Checking exceptions
2023-08-07 20:11:03,430:INFO:Preloading libraries
2023-08-07 20:11:03,430:INFO:Set up data.
2023-08-07 20:11:03,450:INFO:Set up index.
2023-08-07 20:19:52,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:19:52,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:19:52,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:19:52,328:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-07 20:20:01,329:INFO:Initializing load_model()
2023-08-07 20:20:01,331:INFO:load_model(model_name=my_best_pipeline, platform=None, authentication=None, verbose=True)
2023-08-07 20:20:01,347:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\sklearn\base.py:299: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-07 20:20:01,365:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\sklearn\base.py:299: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2023-08-07 20:20:09,351:WARNING:C:\Users\Sajjad Sindhi\AppData\Local\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.3.1', 'setuptools': '65.6.3', 'pycaret': '3.0.4', 'IPython': '8.10.0', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.0', 'joblib': '1.3.1', 'sklearn': '1.2.1', 'pyod': '1.1.0', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.56.4', 'requests': '2.28.1', 'matplotlib': '3.7.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.5', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.10.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.0.4', 'IPython': '8.14.0', 'ipywidgets': '8.1.0', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.11.1', 'joblib': '1.3.1', 'sklearn': '1.2.2', 'pyod': '1.1.0', 'imblearn': '0.11.0', 'category_encoders': '2.6.1', 'lightgbm': '4.0.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.7.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.15.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.5', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.17', 'machine': 'AMD64'}}
  warnings.warn(

2023-08-07 20:20:09,654:INFO:Initializing predict_model()
2023-08-07 20:20:09,654:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C5EF9229E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigree function',
                                             'Age (years)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C5E65B84C0>)
2023-08-07 20:20:09,655:INFO:Checking exceptions
2023-08-07 20:20:09,655:INFO:Preloading libraries
2023-08-07 20:20:09,657:INFO:Set up data.
2023-08-07 20:20:09,735:INFO:Set up index.
2023-08-07 20:22:33,154:INFO:Initializing predict_model()
2023-08-07 20:22:33,154:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C5E612E770>, estimator=Pipeline(memory=FastMemory(location=C:\Users\SAJJAD~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of times pregnant',
                                             'Plasma glucose concentration a 2 '
                                             'hours in an oral glucose '
                                             'tolerance test',
                                             'Diastolic blood pressure (mm Hg)',
                                             'Triceps skin fold thickness (mm)',
                                             '2-Hour serum insulin (mu U/ml)',
                                             'Body mass index (weight in '
                                             'kg/(height in m)^2)',
                                             'Diabetes pedigree function',
                                             'Age (years)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C5EFAD0040>)
2023-08-07 20:22:33,155:INFO:Checking exceptions
2023-08-07 20:22:33,157:INFO:Preloading libraries
2023-08-07 20:22:33,162:INFO:Set up data.
2023-08-07 20:22:33,238:INFO:Set up index.
